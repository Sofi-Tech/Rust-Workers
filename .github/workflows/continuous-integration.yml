name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  CI: 1
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: 'always'
  DIFF: 0
  # For faster CI
  RUST_LOG: 'off'

jobs:
  cargo-fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    env:
      RUST_LOG: '0'
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt

      - run: cargo fmt --all -- --check

  cargo-clippy:
    name: Cargo clippy
    if: >-
      ${{ !contains(github.event.head_commit.message, 'chore: ') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy

      - run: cargo clippy --all --all-targets -- -D warnings

  cargo-test:
    name: Cargo test
    if: >-
      ${{ !contains(github.event.head_commit.message, 'chore: ') }}
    runs-on: ubuntu-latest
    steps:
      - name: Find PR Comment For Edit
        id: edit-comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- CI COMMENT -->'

      - name: Create or update PR comment For Edit
        if: github.event_name == 'pull_request' && steps.edit-comment.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v2
        continue-on-error: true
        with:
          comment-id: ${{ steps.comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## :hourglass_flowing_sand: CI is running again... :hourglass_flowing_sand:
            [Wait for it...](https://github.com/vercel/turbo/actions/runs/${{ github.run_id }})
            <!-- CI COMMENT -->
          edit-mode: replace

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: Rust tests
        run: cargo test --tests -- -Zunstable-options --report-time  | tee comment.md

      - name: Add comment in the file
        run: |
          echo "<!-- CI COMMENT -->" >> comment.md

      - name: Find PR Comment
        id: comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/find-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: '<!-- CI COMMENT -->'

      - name: Create or update PR comment
        if: github.event_name == 'pull_request'
        uses: peter-evans/create-or-update-comment@v2
        continue-on-error: true
        with:
          comment-id: ${{ steps.comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-file: 'comment.md'
          edit-mode: replace

    # TODO:Setup this with all the ci and their status
  # final:
  #   name: Add Comment
  #   needs: [cargo-fmt, cargo-clippy, cargo-test]
  #   permissions:
  #     contents: read
  #     pull-requests: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check cancellation
  #       id: cancelled
  #       if: needs.cargo-fmt.result == 'cancelled' || needs.cargo-clippy.result == 'cancelled' || needs.cargo-test.result == 'cancelled'
  #       run: echo "cancelled=true" >> $GITHUB_OUTPUT

  #     - name: Add comment in the file
  #       run: |
  #         echo "<!-- CI COMMENT -->" >> comment.md

  #     - name: Find PR Comment
  #       id: comment
  #       if: github.event_name == 'pull_request' && steps.cancelled.outputs.cancelled != 'true'
  #       uses: peter-evans/find-comment@v2
  #       with:
  #         issue-number: ${{ github.event.pull_request.number }}
  #         comment-author: 'github-actions[bot]'
  #         body-includes: '<!-- CI COMMENT -->'

  #     - name: Create or update PR comment
  #       if: github.event_name == 'pull_request' && steps.cancelled.outputs.cancelled != 'true'
  #       uses: peter-evans/create-or-update-comment@v2
  #       continue-on-error: true
  #       with:
  #         comment-id: ${{ steps.comment.outputs.comment-id }}
  #         issue-number: ${{ github.event.pull_request.number }}
  #         body-file: 'comment.md'
  #         edit-mode: replace
